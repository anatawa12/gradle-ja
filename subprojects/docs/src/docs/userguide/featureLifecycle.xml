<!--
  ~ Copyright 2012 the original author or authors.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<appendix id="feature_lifecycle" xml:lang="ja">
    <title>機能のライフサイクル <phrase role="original">The Feature Lifecycle</phrase></title>
    <para role="original">
        Gradle is under constant development and improvement. New versions are delivered on a regular and frequent basis
        (approximately every 6 weeks). Continuous improvement combined with frequent delivery allows new features to be made available
        to users early and for invaluable real world feedback to be incorporated into the development process. Getting
        new functionality into the hands of users regularly is a core value of the Gradle platform.
        At the same time, API and feature stability is taken very seriously and is also considered a core value of the Gradle platform.
        This is something that is engineered into the development process by design choices and automated testing, and is formalised by
        <xref linkend='backwards_compatibility'>Backwards Compatibility Policy</xref>.
    </para>
    <para>
        Gradleプロジェクトは現在も活発に開発、改善されており、新しいバージョンが定期的に、また頻繁にリリースされています(大体6週間に一度)。
        新しい機能および修正を頻繁にリリースすることで、それらの新機能が素早くユーザーにより確認され、実際の現場で得られた貴重なフィードバックを開発プロセスに組み入れることができるのです。新しい機能を多くのユーザーに定期的に届けることは、Gradleプラットフォームの重要な価値の一つです。
        それと同時に、APIや機能の安定性もとても重要であり、これもGradleプラットフォームの大事な価値の一つだと考えています。
        新機能は、設計上の選択により開発プロセスに組み入れられ、自動テストされ、<xref linkend='backwards_compatibility'>上位互換性ポリシー</xref>に従って正式採用されるようになっています。
    </para>
    <para role="original">
        The Gradle
        <firstterm>feature lifecycle</firstterm>
        has been designed to meet these goals. It also serves
        to clearly communicate to users of Gradle what the state of a feature is. The term
        <firstterm>feature</firstterm>
        typically means
        an API or DSL method or property in this context, but it is not restricted to this definition.
        Command line arguments and modes of execution (e.g. the Build Daemon) are two examples of other kinds of features.
    </para>
    Gradleの<firstterm>機能ライフサイクル</firstterm>は、これらの目的を達成するために設計されました。
    また、機能ライフサイクルは、ある機能が今どんなステータスにあるのか、ユーザーに明確に伝えることにも寄与します。
    <firstterm>機能</firstterm>という用語は、たいていの場合APIやDSLのメソッドやプロパティを指しますが、それだけにとどまりません。
    コマンドライン引数や実行モード(例えばBuild Deamon)などもその一つです。
    <section>
        <title>状態 <phrase role="original">States</phrase></title>
        <para role="original">
            Features can be in one of 4 states:
        </para>
        <para>機能の状態は、以下の四つのうちいずれかとなります。</para>
        <itemizedlist>
            <listitem>
                <para role="original">Internal</para>
                <para>非公開</para>
            </listitem>
            <listitem>
                <para role="original">Incubating</para>
                <para>試験的</para>
            </listitem>
            <listitem>
                <para role="original">Public</para>
                <para>公開</para>
            </listitem>
            <listitem>
                <para role="original">Deprecated</para>
                <para>非推奨</para>
            </listitem>
        </itemizedlist>
        <section>
            <title>非公開 <phrase role="original">Internal</phrase></title>
            <para role="original">
                Internal features are not designed for public use and are only intended to be used by Gradle itself. They can change in any way at any
                point in time without any notice. Therefore, we recommend avoiding the use of such features.
                Internal features are not documented. If it appears in this User Guide, the DSL Reference or the API Reference documentation then
                the feature is not internal.
            </para>
            <para>
                非公開の機能は、広く使われることは想定しておらず、Gradleが内部的に使うためのものです。これらの機能は、いつでもどんな風にも予告なく変更される可能性があります。
                従って、これらの機能を使うことは推奨しません。
                また、非公開機能はドキュメント化もされません。もしユーザーガイドやDSLリファレンス、APIリファレンスに載っているなら、それは非公開機能ではないということです。
            </para>
            <para role="original">
                Internal features may evolve into public features.
            </para>
            <para>非公開機能は、公開機能に昇格する可能性があります。</para>
        </section>
        <section id="sec:incubating_state">
            <title>試験的 <phrase role="original">Incubating</phrase></title>
            <para role="original">
                Features are introduced in the <firstterm>incubating</firstterm> state to allow real world feedback to be incorporated into the feature before it is made public and
                locked down to provide backwards compatibility.
                It also gives users who are willing to accept potential future changes early access to the feature so they can put it into use immediately.
            </para>
            <para>
                <firstterm>試験的な</firstterm>状態にあると書かれた機能は、正式に公開される前に、実際の運用で発生したフィードバックを受け付けている状態のものです。フィードバックが組み込まれ、正式に公開されると、上位互換性を保証するために固定化されることになります。
                これらの機能は、機能が変更されるリスクを受け入れられるユーザーに向けて公開されているもので、そういったユーザーであればすぐに使ってみることができます。
            </para>
            <para role="original">
                A feature in an incubating state may change in future Gradle versions until it is no longer incubating.
                Changes to incubating features for a Gradle release will be highlighted in the release notes for that release.
                The incubation period for new features varies depending on the scope, complexity and nature of the feature.
            </para>
            <para>
                試験的な機能は、試験的でなくなるまでは将来のバージョンのGradleで変更されるかもしれません。変更された場合はリリースノートで通知します。
                新機能の試験期間は、その範囲や複雑性、機能の性質によって様々です。
            </para>
            <para role="original">
                Features in incubation are clearly indicated to be so. In the source code, all methods/properties/classes that are incubating are
                annotated with <apilink class="org.gradle.api.Incubating"/>, which is also used to specially mark them in the DSL and API references. If an incubating
                feature is discussed in this User Guide, it will be explicitly said to be in the incubating state.
            </para>
            <para>試験的な機能は、試験的であるとはっきり明示されます。ソースコードでは全ての試験的なメソッド、プロパティ、クラスは<apilink class="org.gradle.api.Incubating"/>アノテーションで注釈されます。これはDSLリファレンスやAPIリファレンスにマークする際も使用されます。試験的機能についてユーザーガイドで言及するときは、試験的な状態にあることを明示的に記載します。</para>
        </section>
        <section>
            <title>公開 <phrase role="original">Public</phrase></title>
            <para role="original">
                The default state for a non-internal feature is <firstterm>public</firstterm>.
                Anything that is documented in the User Guide, DSL Reference or API references that
                is not explicitly said to be incubating or deprecated is considered public. Features are said to be <firstterm>promoted</firstterm> from an
                incubating state to public. The release notes for each release indicate which previously incubating features are being promoted by the release.
            </para>
            <para>
                非公開でない機能のデフォルトのステータスが<firstterm>公開</firstterm>です。
                ユーザーガイド、DSLリファレンス、APIリファレンスにおける全ての記載内容は、明示的に試験的とか非推奨などと書かれていない限り公開状態と考えてください。
                機能は、試験的な状態から公開機能へと言わば<firstterm>昇格</firstterm>します。試験的だった機能が公開状態に昇格した場合は、そのバージョンのリリースノートで通知します。
            </para>
            <para role="original">
                A public feature will <emphasis>never</emphasis> be removed or intentionally changed without undergoing deprecation.
                All public features are subject to the backwards compatibility policy.
            </para>
            <para>
                公開状態の機能は、非推奨とならない限り<emphasis>決して</emphasis>削除されたり意図的に変更されたりすることはありません。
                全ての公開機能は上位互換性ポリシーの対象となります。
            </para>
        </section>
        <section>
            <title>非推奨 <phrase role="original">Deprecated</phrase></title>
            <para role="original">
                Some features will become superseded or irrelevant due to the natural evolution of Gradle. Such features will eventually be removed
                from Gradle after being <firstterm>deprecated</firstterm>. A deprecated feature will <emphasis>never</emphasis>
                be changed, until it is finally removed according to the backwards compatibility policy.
            </para>
            <para>
                Gradleの発展に伴って、いくつかの機能は別のものに取って代わられたり、不適切になったりすることがあります。
                そのような機能は、<firstterm>非推奨</firstterm>とされた後、やがてはGradleから削除されます。
                非推奨の機能は、上位互換性ポリシーに従い、削除されるまで決して変更されることはありません。
            </para>
            <para role="original">
                Deprecated features are clearly indicated to be so. In the source code, all methods/properties/classes that are deprecated are
                annotated with
                “<literal>@java.lang.Deprecated</literal>”
                which is reflected in the DSL and API references.
                In most cases, there is a replacement for the deprecated element, and this will be described in the documentation.
                Using a deprecated feature will also result in a runtime warning in Gradle's output.
            </para>
            <para>非推奨の機能は、非推奨であるとはっきり明示されます。ソースコードでは全ての非推奨メソッド、プロパティ、クラスは<literal>@java.lang.Deprecated</literal>アノテーションで注釈されます。これはDSLリファレンスやAPIリファレンスにも反映されます。ほとんどの場合、非推奨となった要素には代替となるものが用意され、ドキュメントにも記載されます。また、非推奨の機能を使うと、Gradle実行時に警告メッセージが出力されます。</para>
            <para role="original">
                Use of deprecated features should be avoided. The release notes for each release indicate any features that are being deprecated
                by the release.
            </para>
            <para>非推奨機能の使用は避けるべきです。リリースノートには、そのリリースで非推奨となった機能が全て記載されています。</para>
        </section>
    </section>
    <section id="backwards_compatibility">
        <title>後方互換性ポリシー <phrase role="original">Backwards Compatibility Policy</phrase></title>
        <para role="original">
            Gradle provides backwards compatibility for across major versions (e.g. <literal>1.x</literal>, <literal>2.x</literal>
            etc.).
            Once a public feature is introduced or promoted in a Gradle release it will remain indefinitely or until it is deprecated. Once
            deprecated, it may be removed in the next major release. Deprecated features may be supported across major
            releases, but this is not guaranteed.
        </para>
        <para>
            Gradleはメジャーバージョン間(<literal>1.x</literal>、<literal>2.x</literal>など)で上位互換性を保持します。
            一度Gradleのリリースに導入されたり昇格したりした公開機能は、非推奨にならない限り決して変更されません。
            機能がいったん非推奨になると、次からのメジャーリリースでは削除される可能性があります。
            非推奨機能がメジャーバージョンをまたいでサポートされる場合もありますが、必ずそうとは限りません。
        </para>
    </section>
</appendix>
